@model Aiursoft.ChessServer.Models.ViewModels.ChallengeViewModel

<div class="jumbotron">
    <div class="container">
        <h1 class="display-4">Waiting for opponent joining...</h1>
        <p class="lead">Please share the link of this room to your friend!</p>
        @{
            var link = $"{Context.Request.Scheme}://{Context.Request.Host}/challenge/{Model.ChallengeId}";
        }
        <form asp-controller="Challenges" asp-action="Drop" asp-route-id="@Model.ChallengeId" method="post" class="d-inline" asp-antiforgery="false">
            <div asp-validation-summary="All" class="text-danger"></div>
            <input type="hidden" name="playerId" value=""/>
            
            <input type="text" class="form-control" value="@link" readonly>
            <a class="btn btn-secondary btn-lg mt-4" data-clipboard-text="@link" role="button" data-toggle="tooltip" data-placement="top" title="Copied!">
                Copy link
            </a>
            <button type="submit" class="btn btn-danger btn-lg mt-4">
                Leave
            </button>
        </form>
    </div>
</div>

@section scripts
{
    <script type="module">
        import { getUserId } from "/scripts/player.js";
        const playerId = getUserId();
        const playerIdControl = document.querySelector('input[name="playerId"]');
        playerIdControl.value = playerId;
    </script>
    <script src="/node_modules/clipboard/dist/clipboard.min.js"></script>
    <script>
        // Initialize clipboard.
        const clipboard = new ClipboardJS('.btn');
        
        // Activate tooltip tool
        $('[data-toggle="tooltip"]').tooltip({
                trigger: 'click',
                placement: 'bottom'
        });
    </script>
    <script type="module">
        import { acceptChallenge, getUserId } from "/scripts/player.js";
        
        // Listen to the channel
        const wsScheme = window.location.protocol === "https:" ? "wss://" : "ws://";
        const socket = new WebSocket(
            `${wsScheme}${window.location.host}/challenge/listen/${@Model.ChallengeId}.ws`
        );
        
        socket.addEventListener('open', function () {
            console.log('WebSocket is open now. Accepting challenge...');
            acceptChallenge(@Model.ChallengeId);
        });

        socket.onmessage = function (event) {
            // May get data like: game-started
            if (event.data.startsWith('game-started')) {
                const gameId = @Model.ChallengeId;
                if (gameId) {
                    window.location.href = `/games/${gameId}.html`;
                }
            }
        };
    
    </script>
}